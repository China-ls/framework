<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       ">

    <!-- ******************************************************************** -->
    <!-- Spring 3.0 configuration -->
    <!-- ******************************************************************** -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
    <mvc:default-servlet-handler/>

    <!-- ******************************************************************** -->
    <!-- Mark bean transactions as annotation driven -->
    <!-- ******************************************************************** -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!-- ******************************************************************** -->
    <!-- Register Multi Part Resolve -->
    <!-- ******************************************************************** -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- ******************************************************************** -->
    <!-- Bean Name View Resolver used to Redirect to Beans by id, required by Binary Content View -->
    <!-- ******************************************************************** -->
    <bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*,*"
                     allowed-methods="GET,POST,PUT,DELETE,OPTIONS"
                     allowed-headers="APPKEY,Authorization,Content-Type,If-None-Match"
                     allow-credentials="false"
                     max-age="1800"/>
    </mvc:cors>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!-- 需排除拦截的地址 -->
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.infinite.framework.router.interceptor.MethodMonitorInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- ******************************************************************** -->
    <!-- Scan for web layer annotated beans -->
    <!-- ******************************************************************** -->
    <context:component-scan base-package="com.infinite.framework.router.controller" scoped-proxy="interfaces"/>

</beans>